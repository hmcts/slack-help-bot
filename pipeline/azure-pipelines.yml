# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - main
resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

variables:
  terraformVersion: 1.5.4
  timeoutInMinutes: 60
  agentPool: 'ubuntu-latest'
  build: $(Build.BuildNumber)
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  connectedServiceName: DCD-CFT-Sandbox
  keyVaultName: infra-vault-sandbox
  secretsFilter: azure-devops-sp-token
  project: application

parameters:
  - name: environments
    displayName: Environment to run
    type: object
    default:
      - deployment: 'slack-help-bot'
        environment: 'cftptl'
        storageAccountName: 'cftptlintsvc'
        storageAccountRg: 'core-infra-intsvc-rg'
        dependsOn: 'Precheck'    

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
      - 'UK South'
      - 'UK West'

stages:
  - stage: Precheck
    jobs:
      - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
        parameters:
          agentPool: ${{ variables.agentPool }} 
          timeoutInMinutes: ${{ variables.timeoutInMinutes}}
          terraformVersion: ${{ variables.terraformVersion}}
          connectedServiceName: ${{ variables.connectedServiceName }}
          keyVaultName: ${{ variables.keyVaultName }}
          secretsFilter: ${{ variables.secretsFilter }}

  - ${{ each parameter in parameters.environments }}:
    - stage: ${{ parameter.environment }}
      displayName: "${{ parameter.environment }}-intsvc"
      dependsOn: ${{ parameter.dependsOn }}
      jobs:
        - job:
          pool:
            vmImage: ${{ variables.agentPool }}
          steps:
            - template: templates/terraform/terraform.yaml
              parameters:
                environment: "${{ parameter.environment }}-intsvc"
                location: ${{ parameters.location }}
                stack: ${{ parameter.deployment }}
                project: ${{ variables.project }}
                storageAccountName: ${{ parameter.storageAccountName }}
                storageAccountRg: ${{ parameter.storageAccountRg }}
                tfversion: ${{ variables.terraformVersion}}
                serviceConnection: "DTS-${{ upper(parameter.environment) }}-INTSVC"
